[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jonaa\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jonaa\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 13.0.1)
[debug]       Load.loadUnit: plugins took 134.768ms
[debug]       Load.loadUnit: defsScala took 0.3146ms
[debug] [Loading] Scanning directory C:\Users\jonaa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jonaa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.957 ms
[debug]           Load.resolveProject(global-plugins) took 58.1685ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jonaa\.sbt\1.0\plugins, plugins: List(<none>))) took 109.9012ms
[debug] [Loading] Done in C:\Users\jonaa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 140.1194ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2571ms
[debug]     Load.loadUnit(file:/C:/Users/jonaa/.sbt/1.0/plugins/, ...) took 285.5101ms
[debug]   Load.apply: load took 492.7778ms
[debug]   Load.apply: resolveProjects took 13.8859ms
[debug]   Load.apply: finalTransforms took 104.2657ms
[debug]   Load.apply: config.delegates took 11.1181ms
[debug]   Load.apply: Def.make(settings)... took 692.1299ms
[debug]   Load.apply: structureIndex took 191.9627ms
[debug]   Load.apply: mkStreams took 2.6863ms
[info] loading global plugins from C:\Users\jonaa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4125.5555ms
[debug]           Load.loadUnit: plugins took 55.9079ms
[debug]           Load.loadUnit: defsScala took 0.0061ms
[debug] [Loading] Scanning directory D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po\project
[debug]             Load.loadUnit: mkEval took 13.6122ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.7668 ms
[info] loading settings for project po-build from idea2.sbt ...
[debug]               Load.resolveProject(po-build) took 4.5799ms
[debug]             Load.loadTransitive: finalizeProject(Project(id po-build, base: D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po\project, plugins: List(<none>))) took 10.337ms
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po\project, returning: (po-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3390.2886ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.9268ms
[debug]         Load.loadUnit(file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/po/project/, ...) took 3455.6604ms
[debug]       Load.apply: load took 3457.5794ms
[debug]       Load.apply: resolveProjects took 0.1328ms
[debug]       Load.apply: finalTransforms took 18.3766ms
[debug]       Load.apply: config.delegates took 0.71ms
[debug]       Load.apply: Def.make(settings)... took 157.9389ms
[debug]       Load.apply: structureIndex took 85.872ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6658.3535ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po
[debug]       Load.loadUnit: mkEval took 0.3977ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7425 ms
[info] loading settings for project po from build.sbt ...
[debug]         Load.resolveProject(po) took 65.7746ms
[debug]       Load.loadTransitive: finalizeProject(Project(id po, base: D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po, plugins: List(<none>))) took 72.2705ms
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\po, returning: (po)
[debug]     Load.loadUnit: loadedProjectsRaw took 1876.196ms
[debug]     Load.loadUnit: cleanEvalClasses took 31.9619ms
[debug]   Load.loadUnit(file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/po/, ...) took 8567.9698ms
[debug] Load.apply: load took 8571.0693ms
[debug] Load.apply: resolveProjects took 0.2898ms
[debug] Load.apply: finalTransforms took 31.3946ms
[debug] Load.apply: config.delegates took 0.4147ms
[debug] Load.apply: Def.make(settings)... took 97.4139ms
[debug] Load.apply: structureIndex took 33.2719ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to po (in build file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/po/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52545 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52545, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to po (in build file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/po/)
[debug] > Exec(idea-shell, None, None)
